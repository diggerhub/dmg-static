{"version":3,"sources":["main.js"],"names":["document","addEventListener","dropDownParent","getElementsByClassName","dropDownIcon","dropDownBg","dropDownLabel","getElementsByTagName","dropDown","accountParent","counterTarget","counterControls","BgAnimationHandler","event","classList","add","removeEventListener","dropDownAnimationHandler","elm","children","contains","remove","target","tagName","innerHTML","text","innerText","updateDropDownLabel","console","log","value","i","counterControlsHandler"],"mappings":"AAAAA,SAASC,iBAAiB,mBAAoB,KAC1C,MAAMC,eAAoBF,SAASG,uBAAuB,YAAY,GAChEC,aAAoBJ,SAASG,uBAAuB,gBAAgB,GACpEE,WAAoBL,SAASG,uBAAuB,mBAAmB,GACvEG,cAAoBN,SAASG,uBAAuB,aAAa,GAAGI,qBAAqB,MAAM,GAC/FC,SAAoBR,SAASG,uBAAuB,YAAY,GAChEM,cAAoBT,SAASG,uBAAuB,WAAW,GAC/DO,cAAoBV,SAASG,uBAAuB,WAAW,GAC/DQ,gBAAoBX,SAASG,uBAAuB,cAG1D,IACIS,mBAAqBC,QACrBL,SAASM,UAAUC,IAAI,kBACvBX,aAAaU,UAAUC,IAAI,kBAC3BV,WAAWW,oBAAoB,gBAAiBJ,qBAUhDK,yBAA2BJ,QAC3B,IAAKK,OAAOhB,eAAeiB,SACnBD,IAAIJ,UAAUM,SAAS,gBACvBF,IAAIJ,UAAUO,OAAO,sBAErBH,IAAIJ,UAAUM,SAAS,kBACvBF,IAAIJ,UAAUO,OAAO,kBAG7Bb,SAASQ,oBAAoB,gBAAiBC,2BAiBlDf,eAAeD,iBAAiB,QAASY,QAErC,GAD6B,MAAzBA,MAAMS,OAAOC,SAnCKD,CAAAA,SAGtB,IAAKJ,OAFUZ,cAAckB,UAC7BlB,cAAckB,UAAYF,OAAOG,KACrBjB,SAASW,UACjBD,IAAIJ,UAAUO,OAAO,UACjBH,IAAIQ,YAAcpB,cAAckB,WAAWN,IAAIJ,UAAUC,IAAI,WA8BnCY,CAAoBd,MAAMS,QAzCjCd,SAASM,UAAUM,SAAS,kBAqDnDZ,SAASM,UAAUO,OAAO,kBAC1BjB,aAAaU,UAAUO,OAAO,kBAC9Bb,SAASP,iBAAiB,gBAAiBgB,8BAbpB,CACvB,IAAKC,OAAOhB,eAAeiB,SACnBD,IAAIJ,UAAUM,SAAS,gBACvBF,IAAIJ,UAAUC,IAAI,sBAElBG,IAAIJ,UAAUM,SAAS,kBACvBF,IAAIJ,UAAUC,IAAI,kBAG1BV,WAAWJ,iBAAiB,gBAAiBW,uBAOrDH,cAAcR,iBAAiB,QAASY,QAChCJ,cAAcU,SAAS,GAAGL,UAAUM,SAAS,UAC7CX,cAAcU,SAAS,GAAGL,UAAUO,OAAO,UAE3CZ,cAAcU,SAAS,GAAGL,UAAUC,IAAI,YAGhDL,cAAcT,iBAAiB,QAASY,QACpCe,QAAQC,IAAIhB,MAAMS,OAAOQ,SAtCA,MACzB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAGA,IACnBpB,gBAAgBoB,GAAG9B,iBAAiB,QAASY,QACrCF,gBAAgBoB,GAAGjB,UAAUM,SAAS,gBACtCV,cAAcoB,QAEVpB,cAAcoB,MAAQ,GAAGpB,cAAcoB,WAkC3DE","file":"main.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", () => {\n    const dropDownParent    = document.getElementsByClassName('sortList')[0],\n          dropDownIcon      = document.getElementsByClassName('dropDownIcon')[0],\n          dropDownBg        = document.getElementsByClassName('labelBackground')[0],\n          dropDownLabel     = document.getElementsByClassName('sortLabel')[0].getElementsByTagName('h4')[0],\n          dropDown          = document.getElementsByClassName('dropDown')[0],\n          accountParent     = document.getElementsByClassName('account')[0],\n          counterTarget     = document.getElementsByClassName('counter')[0],\n          counterControls   = document.getElementsByClassName('increments');\n\n\n    let isDropDownExtended = () => dropDown.classList.contains('dropDownExpend');\n    let BgAnimationHandler = event => {\n        dropDown.classList.add('dropDownExpend');\n        dropDownIcon.classList.add('dropDownRotate');\n        dropDownBg.removeEventListener('transitionend', BgAnimationHandler);\n    };\n    let updateDropDownLabel = target => {\n        let oldLabel = dropDownLabel.innerHTML;\n        dropDownLabel.innerHTML = target.text;\n        for (elm of dropDown.children) {\n            elm.classList.remove('hidden');\n            if (elm.innerText === dropDownLabel.innerHTML) elm.classList.add('hidden');\n        }\n    };\n    let dropDownAnimationHandler = event => {\n        for (elm of dropDownParent.children) {\n            if (elm.classList.contains('outerBorder')) {\n                elm.classList.remove('outerBorderMoveOut');\n            }\n            if (elm.classList.contains('dropAnimation')) {\n                elm.classList.remove('dropDownMoveIn');\n            }\n        }\n        dropDown.removeEventListener('transitionend', dropDownAnimationHandler);\n    };\n    let updateTotalprice = (amount, unitPrice) => {\n        console.log(amount, unitPrice);\n    }\n    let counterControlsHandler = () => {\n        for (let i = 0; i < 2; i++) {\n            counterControls[i].addEventListener('click', event => {\n                if (counterControls[i].classList.contains('addIncrement')) {\n                    counterTarget.value++\n                } else {\n                    if (counterTarget.value > 1) counterTarget.value--\n                }\n            })\n        }\n    };\n\n    dropDownParent.addEventListener('click', event => {\n        if (event.target.tagName === 'A') updateDropDownLabel(event.target);\n        if (!isDropDownExtended()) {\n            for (elm of dropDownParent.children) {\n                if (elm.classList.contains('outerBorder')) {\n                    elm.classList.add('outerBorderMoveOut');\n                }\n                if (elm.classList.contains('dropAnimation')) {\n                    elm.classList.add('dropDownMoveIn');\n                }\n            }\n            dropDownBg.addEventListener('transitionend', BgAnimationHandler)\n        } else {\n            dropDown.classList.remove('dropDownExpend');\n            dropDownIcon.classList.remove('dropDownRotate');\n            dropDown.addEventListener('transitionend', dropDownAnimationHandler)\n        }\n    });\n    accountParent.addEventListener('click', event => {\n        if (accountParent.children[2].classList.contains('fadeIn')) {\n            accountParent.children[2].classList.remove('fadeIn')\n        } else {\n            accountParent.children[2].classList.add('fadeIn')\n        }\n    });\n    counterTarget.addEventListener('input', event => {\n        console.log(event.target.value);\n    })\n    counterControlsHandler();\n\n});"]}